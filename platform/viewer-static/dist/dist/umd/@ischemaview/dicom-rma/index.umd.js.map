{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://@ischemaview/dicom-rma/webpack/universalModuleDefinition","webpack://@ischemaview/dicom-rma/external umd {\"commonjs2\":\"@ohif/core\",\"commonjs\":\"@ohif/core\",\"amd\":\"@ohif/core\",\"root\":\"@ohif/core\"}","webpack://@ischemaview/dicom-rma/external umd {\"commonjs2\":\"@ohif/mode-longitudinal\",\"commonjs\":\"@ohif/mode-longitudinal\",\"amd\":\"@ohif/mode-longitudinal\",\"root\":\"@ohif/mode-longitudinal\"}","webpack://@ischemaview/dicom-rma/webpack/bootstrap","webpack://@ischemaview/dicom-rma/webpack/runtime/define property getters","webpack://@ischemaview/dicom-rma/webpack/runtime/hasOwnProperty shorthand","webpack://@ischemaview/dicom-rma/webpack/runtime/make namespace object","webpack://@ischemaview/dicom-rma/./src/id.js","webpack://@ischemaview/dicom-rma/./src/index.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@ohif/core\"), require(\"@ohif/mode-longitudinal\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@ischemaview/dicom-rma\", [\"@ohif/core\", \"@ohif/mode-longitudinal\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@ischemaview/dicom-rma\"] = factory(require(\"@ohif/core\"), require(\"@ohif/mode-longitudinal\"));\n\telse\n\t\troot[\"@ischemaview/dicom-rma\"] = factory(root[\"@ohif/core\"], root[\"@ohif/mode-longitudinal\"]);\n})(typeof self !== 'undefined' ? self : this, (__WEBPACK_EXTERNAL_MODULE__310__, __WEBPACK_EXTERNAL_MODULE__620__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__310__;","module.exports = __WEBPACK_EXTERNAL_MODULE__620__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import { hotkeys } from '@ohif/core';\nimport { id } from './id';\nimport { initToolGroups, toolbarButtons } from '@ohif/mode-longitudinal';\n\nconst ohif = {\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\n  hangingProtocol: '@ohif/extension-default.hangingProtocolModule.default',\n  leftPanel: '@ohif/extension-default.panelModule.seriesList',\n  rightPanel: '@ohif/extension-default.panelModule.measure',\n};\n\nconst cornerstone = {\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\n};\n\n/**\n * Just two dependencies to be able to render a viewport with panels in order\n * to make sure that the mode is working.\n */\nconst extensionDependencies = {\n  '@ohif/extension-default': '^3.0.0',\n  '@ohif/extension-cornerstone': '^3.0.0',\n};\n\nfunction modeFactory({ modeConfiguration }) {\n  return {\n    /**\n     * Mode ID, which should be unique among modes used by the viewer. This ID\n     * is used to identify the mode in the viewer's state.\n     */\n    id,\n    routeName: 'template',\n    /**\n     * Mode name, which is displayed in the viewer's UI in the workList, for the\n     * user to select the mode.\n     */\n    displayName: 'Template Mode',\n    /**\n     * Runs when the Mode Route is mounted to the DOM. Usually used to initialize\n     * Services and other resources.\n     */\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }) => {\n      const { measurementService, toolbarService, toolGroupService } = servicesManager.services;\n\n      measurementService.clearMeasurements();\n\n      // Init Default and SR ToolGroups\n      initToolGroups(extensionManager, toolGroupService, commandsManager);\n\n      let unsubscribe;\n\n      const activateTool = () => {\n        toolbarService.recordInteraction({\n          groupId: 'WindowLevel',\n          interactionType: 'tool',\n          commands: [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'WindowLevel',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n        });\n\n        // We don't need to reset the active tool whenever a viewport is getting\n        // added to the toolGroup.\n        unsubscribe();\n      };\n\n      // Since we only have one viewport for the basic cs3d mode and it has\n      // only one hanging protocol, we can just use the first viewport\n      ({ unsubscribe } = toolGroupService.subscribe(\n        toolGroupService.EVENTS.VIEWPORT_ADDED,\n        activateTool\n      ));\n\n      toolbarService.init(extensionManager);\n      toolbarService.addButtons(toolbarButtons);\n      toolbarService.createButtonSection('primary', [\n        'MeasurementTools',\n        'Zoom',\n        'WindowLevel',\n        'Pan',\n        'Capture',\n        'Layout',\n        'MPR',\n        'Crosshairs',\n        'MoreTools',\n      ]);\n    },\n    onModeExit: ({ servicesManager }) => {\n      const {\n        toolGroupService,\n        syncGroupService,\n        toolbarService,\n        segmentationService,\n        cornerstoneViewportService,\n      } = servicesManager.services;\n\n      toolGroupService.destroy();\n      syncGroupService.destroy();\n      segmentationService.destroy();\n      cornerstoneViewportService.destroy();\n    },\n    /** */\n    validationTags: {\n      study: [],\n      series: [],\n    },\n    /**\n     * A boolean return value that indicates whether the mode is valid for the\n     * modalities of the selected studies. For instance a PET/CT mode should be\n     */\n    isValidMode: ({ modalities }) => true,\n    /**\n     * Mode Routes are used to define the mode's behavior. A list of Mode Route\n     * that includes the mode's path and the layout to be used. The layout will\n     * include the components that are used in the layout. For instance, if the\n     * default layoutTemplate is used (id: '@ohif/extension-default.layoutTemplateModule.viewerLayout')\n     * it will include the leftPanels, rightPanels, and viewports. However, if\n     * you define another layoutTemplate that includes a Footer for instance,\n     * you should provide the Footer component here too. Note: We use Strings\n     * to reference the component's ID as they are registered in the internal\n     * ExtensionManager. The template for the string is:\n     * `${extensionId}.{moduleType}.${componentId}`.\n     */\n    routes: [\n      {\n        path: 'template',\n        layoutTemplate: ({ location, servicesManager }) => {\n          return {\n            id: ohif.layout,\n            props: {\n              leftPanels: [ohif.leftPanel],\n              rightPanels: [ohif.rightPanel],\n              viewports: [\n                {\n                  namespace: cornerstone.viewport,\n                  displaySetsToDisplay: [ohif.sopClassHandler],\n                },\n              ],\n            },\n          };\n        },\n      },\n    ],\n    /** List of extensions that are used by the mode */\n    extensions: extensionDependencies,\n    /** HangingProtocol used by the mode */\n    // hangingProtocol: [''],\n    /** SopClassHandlers used by the mode */\n    sopClassHandlers: [ohif.sopClassHandler],\n    /** hotkeys for mode */\n    hotkeys: [...hotkeys.defaults.hotkeyBindings],\n  };\n}\n\nconst mode = {\n  id,\n  modeFactory,\n  extensionDependencies,\n};\n\nexport default mode;\n"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__310__","__WEBPACK_EXTERNAL_MODULE__620__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","id","packageJson","ohif","extensionDependencies","modeFactory","_ref","modeConfiguration","routeName","displayName","onModeEnter","_ref2","unsubscribe","servicesManager","extensionManager","commandsManager","_servicesManager$serv","services","measurementService","toolbarService","toolGroupService","clearMeasurements","initToolGroups","_toolGroupService$sub","subscribe","EVENTS","VIEWPORT_ADDED","recordInteraction","groupId","interactionType","commands","commandName","commandOptions","toolName","context","init","addButtons","toolbarButtons","createButtonSection","onModeExit","_ref3","_servicesManager$serv2","syncGroupService","segmentationService","cornerstoneViewportService","destroy","validationTags","study","series","isValidMode","_ref4","modalities","routes","path","layoutTemplate","_ref5","location","props","leftPanels","rightPanels","viewports","namespace","displaySetsToDisplay","extensions","sopClassHandlers","hotkeys","defaults","hotkeyBindings"],"sourceRoot":""}