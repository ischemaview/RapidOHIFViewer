{"version":3,"file":"205.bundle.89155e0eacfb8efa042a.js","mappings":";uXACA,4gGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+0CAEA,SAASC,EAAT,GAAuD,IAAfC,EAAe,EAAfA,YACtC,GAAIA,GAAeA,EAAYC,OAAS,EACtC,MAAM,IAAIC,MACR,6FAIJ,IAAQC,EAAaH,EAAY,GAAzBG,SACFC,EAAW,YACjB,KAAsBC,EAAAA,EAAAA,UAAS,MAA/B,GAAOC,EAAP,KAAYC,EAAZ,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,gCAAG,8FACLN,EADK,OAEXI,EAAOJ,GAFI,yNAAH,qDAKVM,MACC,CAACN,IAIF,uBAAKO,UAAU,kCACb,yBACEC,IAAKL,EACLM,UAAQ,EACRC,aAAa,aACbC,QAAQ,OACRJ,UAAU,iBAEV,0BAAQC,IAAKL,EAAKS,KAAMX,IACxB,0BAAQO,IAAKL,EAAKS,KAAMX,IAR1B,gCASgC,IAC9B,qBAAGY,KAAMV,GACNA,EADH,YACiBF,KAOzBL,EAA6BkB,UAAY,CACvCjB,YAAakB,IAAAA,QAAkBA,IAAAA,QAAkBC,YAGnD","sources":["file:////Users/HemantP/Documents/RapidAI/Development/rapid-dicom-viewer/extensions/dicom-video/src/viewports/OHIFCornerstoneVideoViewport.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OHIFCornerstoneVideoViewport({ displaySets }) {\n  if (displaySets && displaySets.length > 1) {\n    throw new Error(\n      'OHIFCornerstoneVideoViewport: only one display set is supported for dicom video right now'\n    );\n  }\n\n  const { videoUrl } = displaySets[0];\n  const mimeType = 'video/mp4';\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const load = async () => {\n      await videoUrl;\n      setUrl(videoUrl);\n    };\n\n    load();\n  }, [videoUrl]);\n\n  // Need to copies of the source to fix a firefox bug\n  return (\n    <div className=\"bg-primary-black w-full h-full\">\n      <video\n        src={url}\n        controls\n        controlsList=\"nodownload\"\n        preload=\"auto\"\n        className=\"w-full h-full\"\n      >\n        <source src={url} type={mimeType} />\n        <source src={url} type={mimeType} />\n        Video src/type not supported:{' '}\n        <a href={url}>\n          {url} of type {mimeType}\n        </a>\n      </video>\n    </div>\n  );\n}\n\nOHIFCornerstoneVideoViewport.propTypes = {\n  displaySets: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default OHIFCornerstoneVideoViewport;\n"],"names":["i","OHIFCornerstoneVideoViewport","displaySets","length","Error","videoUrl","mimeType","useState","url","setUrl","useEffect","load","className","src","controls","controlsList","preload","type","href","propTypes","PropTypes","isRequired"],"sourceRoot":""}