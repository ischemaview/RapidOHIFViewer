{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://@ischemaview/dicom-anr-rma/webpack/universalModuleDefinition","webpack://@ischemaview/dicom-anr-rma/webpack/bootstrap","webpack://@ischemaview/dicom-anr-rma/webpack/runtime/define property getters","webpack://@ischemaview/dicom-anr-rma/webpack/runtime/hasOwnProperty shorthand","webpack://@ischemaview/dicom-anr-rma/webpack/runtime/make namespace object","webpack://@ischemaview/dicom-anr-rma/./src/windowLevelPresets.js","webpack://@ischemaview/dicom-anr-rma/./src/hotkeyBindings.js","webpack://@ischemaview/dicom-anr-rma/./src/id.js","webpack://@ischemaview/dicom-anr-rma/../../extensions/rapidai-extension/src/utils/crosshairColors.ts","webpack://@ischemaview/dicom-anr-rma/./src/initToolGroups.js","webpack://@ischemaview/dicom-anr-rma/../../extensions/rapidai-extension/src/enums/ExtensionEnums.ts","webpack://@ischemaview/dicom-anr-rma/./src/index.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@ischemaview/dicom-anr-rma\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@ischemaview/dicom-anr-rma\"] = factory();\n\telse\n\t\troot[\"@ischemaview/dicom-anr-rma\"] = factory();\n})(typeof self !== 'undefined' ? self : this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default {\n    1: { description: 'Brain', window: '80', level: '40' },\n    2: { description: 'Subdural', window: '300', level: '100' },\n    3: { description: 'Stroke', window: '40', level: '40' },\n    4: { description: 'Soft Tissue', window: '400', level: '60' },\n    5: { description: 'Temporal Bones', window: '2800', level: '600' },\n};\n","import windowLevelPresets from './windowLevelPresets';\n\n/*\n * Supported Keys: https://craig.is/killing/mice\n */\nconst bindings = [\n  {\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Zoom' },\n    label: 'Zoom',\n    keys: ['z'],\n    isEditable: true,\n  },\n  {\n    commandName: 'scaleUpViewport',\n    label: 'Zoom In',\n    keys: ['+'],\n    isEditable: true,\n  },\n  {\n    commandName: 'scaleDownViewport',\n    label: 'Zoom Out',\n    keys: ['-'],\n    isEditable: true,\n  },\n  {\n    commandName: 'fitViewportToWindow',\n    label: 'Zoom to Fit',\n    keys: ['='],\n    isEditable: true,\n  },\n  {\n    commandName: 'rotateViewportCW',\n    label: 'Rotate Right',\n    keys: ['r'],\n    isEditable: true,\n  },\n  {\n    commandName: 'rotateViewportCCW',\n    label: 'Rotate Left',\n    keys: ['l'],\n    isEditable: true,\n  },\n  {\n    commandName: 'flipViewportHorizontal',\n    label: 'Flip Horizontally',\n    keys: ['h'],\n    isEditable: true,\n  },\n  {\n    commandName: 'flipViewportVertical',\n    label: 'Flip Vertically',\n    keys: ['v'],\n    isEditable: true,\n  },\n  {\n    commandName: 'toggleCine',\n    label: 'Cine',\n    keys: ['c'],\n  },\n  {\n    commandName: 'invertViewport',\n    label: 'Invert',\n    keys: ['i'],\n    isEditable: true,\n  },\n  {\n    commandName: 'incrementActiveViewport',\n    label: 'Next Image Viewport',\n    keys: ['right'],\n    isEditable: true,\n  },\n  {\n    commandName: 'decrementActiveViewport',\n    label: 'Previous Image Viewport',\n    keys: ['left'],\n    isEditable: true,\n  },\n  {\n    commandName: 'nextViewportDisplaySet',\n    label: 'Next Series',\n    keys: ['pageup'],\n    isEditable: true,\n  },\n  {\n    commandName: 'previousViewportDisplaySet',\n    label: 'Previous Series',\n    keys: ['pagedown'],\n    isEditable: true,\n  },\n  {\n    commandName: 'nextImage',\n    label: 'Next Image',\n    keys: ['down'],\n    isEditable: true,\n  },\n  {\n    commandName: 'previousImage',\n    label: 'Previous Image',\n    keys: ['up'],\n    isEditable: true,\n  },\n  {\n    commandName: 'firstImage',\n    label: 'First Image',\n    keys: ['home'],\n    isEditable: true,\n  },\n  {\n    commandName: 'lastImage',\n    label: 'Last Image',\n    keys: ['end'],\n    isEditable: true,\n  },\n  {\n    commandName: 'resetViewport',\n    label: 'Reset',\n    keys: ['space'],\n    isEditable: true,\n  },\n  {\n    commandName: 'cancelMeasurement',\n    label: 'Cancel Cornerstone Measurement',\n    keys: ['esc'],\n  },\n  {\n    commandName: 'setWindowLevel',\n    commandOptions: windowLevelPresets[1],\n    label: 'W/L Preset 1',\n    keys: ['1'],\n  },\n  {\n    commandName: 'setWindowLevel',\n    commandOptions: windowLevelPresets[2],\n    label: 'W/L Preset 2',\n    keys: ['2'],\n  },\n  {\n    commandName: 'setWindowLevel',\n    commandOptions: windowLevelPresets[3],\n    label: 'W/L Preset 3',\n    keys: ['3'],\n  }\n];\n\nexport default bindings;\n","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","const crosshairsReferenceLineColor = {\n  axial: 'rgba(0, 255, 240)',\n  sagittal: 'rgba(251, 62, 255)',\n  coronal: 'rgba(255, 214, 0)',\n};\n\nexport { crosshairsReferenceLineColor };\n","import {crosshairsReferenceLineColor} from '../../../extensions/rapidai-extension/src/utils/crosshairColors';\n//import { Enums as csEnums, triggerEvent } from '@cornerstonejs/core';\n\nfunction initDefaultToolGroup(\n  extensionManager,\n  servicesManager,\n  commandsManager,\n  appConfig\n) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { ToolGroupService, CornerstoneViewportService, ViewportGridService , TrackingEventService , toolbarService } = servicesManager.services;\n  const { toolNames, Enums } = utilityModule.exports;\n\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ numTouchPoints: 2 }],\n      },\n      {\n        toolName: toolNames.WindowLevel,\n        bindings: [{ numTouchPoints: 3 }],\n      },\n      {\n        toolName: toolNames.StackScroll,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.StackScrollMouseWheel,\n        bindings: [],\n      },\n    ],\n    passive: [{ toolName: toolNames.Pan }],\n    disabled: [{ toolName: toolNames.Crosshairs }]\n  };\n\n  const toolsConfig = {\n    [toolNames.Crosshairs]: {\n      viewportIndicators: false,\n      autoPan: {\n        enabled: false,\n        panSize: 10,\n      },\n      getReferenceLineColor: (viewportId)=>{\n        const viewport = CornerstoneViewportService.getCornerstoneViewport(viewportId);\n        return crosshairsReferenceLineColor[viewport?.options?.orientation];\n      },\n      onDragHook: (annotations) => {\n        annotations.map((annotation)=>{\n          const viewportId = annotation.data.viewportId;\n          const viewport = CornerstoneViewportService.getCornerstoneViewport(viewportId)\n          viewport.element.style.border = `4px solid ${crosshairsReferenceLineColor[viewport?.options?.orientation]}`;\n        })\n      },\n      onEndHook: () => {\n        TrackingEventService.trackCrosshairChange();\n        console.log('crosshair end');\n        ViewportGridService.getState().viewports.map((vp)=>{\n          const viewport = CornerstoneViewportService.getCornerstoneViewport(vp.viewportId)\n          viewport.element.style.border = `1px solid ${crosshairsReferenceLineColor[viewport?.options?.orientation]}`;\n        })\n      },\n      mobile: {\n        enabled: true,\n        opacity: 0.5,\n        handleRadius: 9,\n      },\n      jumpThreshold : 30\n    },\n    // [toolNames.WindowLevel]:{\n    //   defaultWindowLevelMultiplier:appConfig.defaultWindowLevelMultiplier ,\n    //   defaultWindowRange:appConfig.defaultWindowRange,\n    //   onEndHook: (voiEventDetail) => {\n    //     const activeTool = toolbarService.getActiveTools()[0];\n    //     if(activeTool == 'WindowLevel') {\n    //       const viewport = CornerstoneViewportService.getCornerstoneViewport(voiEventDetail.viewportId);\n    //       const voiRange = viewport.getProperties().voiRange;\n    //       const eventDetail = {\n    //         viewportId: voiEventDetail.viewportId,\n    //         range: voiRange,\n    //         volumeId: voiEventDetail.volumeId,\n    //       };\n    //       triggerEvent(voiEventDetail.element,csEnums.Events.VOI_MODIFIED,eventDetail)\n    //     }\n    //   },\n\n    // }\n  }\n\n  const toolGroupId = 'ctToolGroup';\n  ToolGroupService.createToolGroupAndAddTools(toolGroupId, tools, toolsConfig);\n}\n\nfunction initToolGroups(extensionManager, servicesManager, commandsManager, appConfig) {\n  initDefaultToolGroup(extensionManager, servicesManager, commandsManager, appConfig);\n}\n\nexport default initToolGroups;\n","enum activeIcon {\n  MIP = 'Mip',\n  CROSSHAIR = 'Crosshairs',\n  SLAB = 'Slab',\n  WINDOW_LEVEL = 'WindowLevel',\n  STACK_SCROLL = 'StackScroll'\n}\n\nenum orientation {\n  PORTRAIT = \"portrait\",\n  LANDSCAPE = \"landscape\"\n}\n\nexport { activeIcon, orientation };\n","import hotkeys from './hotkeyBindings.js';\nimport { id } from './id.js';\nimport initToolGroups from './initToolGroups.js';\nimport getToolbarButtons from './getToolbarButtons.js';\nimport { activeIcon } from '../../../extensions/rapidai-extension/src/enums/ExtensionEnums';\n\nconst ohif = {\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\n  hangingProtocols: '@ohif/extension-default.hangingProtocolModule.default',\n};\n\nconst rapidai = {\n  layout:\n    '@ischemaview/dicom-rapidai-extension.layoutTemplateModule.viewerLayout',\n  viewport:\n    '@ischemaview/dicom-rapidai-extension.viewportModule.rapidai-cornerstone-anr-rma',\n};\n\nconst dicomsr = {\n  sopClassHandler:\n    '@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr',\n  viewport: '@ohif/extension-cornerstone-dicom-sr.viewportModule.dicom-sr',\n};\n\nconst dicomvideo = {\n  sopClassHandler:\n    '@ohif/extension-dicom-video.sopClassHandlerModule.dicom-video',\n  viewport: '@ohif/extension-dicom-video.viewportModule.dicom-video',\n};\n\nconst dicompdf = {\n  sopClassHandler: '@ohif/extension-dicom-pdf.sopClassHandlerModule.dicom-pdf',\n  viewport: '@ohif/extension-dicom-pdf.viewportModule.dicom-pdf',\n};\n\ntype SelectOption = {\n  value: string;\n  label: string;\n};\n\nconst themeTypes: SelectOption[] = [\n  {\n    value: 'color-scheme-light',\n    label: 'Light',\n  },\n  {\n    value: 'color-scheme-dark',\n    label: 'Dark',\n  },\n];\n\nconst layoutTypes: SelectOption[] = [\n  {\n    value: 'desktop',\n    label: 'Desktop',\n  },\n  {\n    value: 'tablet',\n    label: 'Tablet',\n  },\n  {\n    value: 'phone',\n    label: 'Phone',\n  },\n];\n\nconst extensionDependencies = {\n  // Can derive the versions at least process.env.from npm_package_version\n  '@ohif/extension-default': '^3.0.0',\n  '@ohif/extension-cornerstone': '^3.0.0',\n  '@ohif/extension-measurement-tracking': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-sr': '^3.0.0',\n  '@ohif/extension-dicom-pdf': '^3.0.1',\n  '@ohif/extension-dicom-video': '^3.0.1',\n};\n\nfunction modeFactory({ modeConfiguration }) {\n  return {\n    // TODO: We're using this as a route segment\n    // We should not be.\n    id,\n    routeName: 'anrRMA',\n    displayName: 'ANR RMA',\n    /**\n     * Lifecycle hooks\n     */\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager , appConfig }) => {\n      const {\n        ToolBarService,\n        ToolGroupService,\n        TouchService,\n        CacheAPIService,\n        MouseEventService,\n        HangingProtocolService,\n        OrientationService,\n        stateSyncService\n      } = servicesManager.services;\n\n      TouchService.init();\n      CacheAPIService.init();\n      MouseEventService.init();\n      OrientationService.init();\n      // Init Default and SR ToolGroups\n      initToolGroups(extensionManager, servicesManager, commandsManager, appConfig);\n\n      //Setting default to StackScroll else for initial period of time it will keep display WL icons\n      ToolBarService.recordInteraction({\n        groupId: 'ctDisplaySet',\n        itemId: 'StackScroll',\n        interactionType: 'tool',\n        commands: [\n          {\n            commandName: 'setToolActive',\n            commandOptions: {\n              toolName: 'StackScroll',\n            },\n            context: 'CORNERSTONE',\n          },\n        ],\n      });\n\n      window.commandsManager = commandsManager;\n      window.servicesManager = servicesManager;\n\n      let unsubscribe;\n\n      const activateTool = () => {\n        if (\n          HangingProtocolService.protocol.id\n            .split('.')\n            .slice(-1)[0]\n            .split('-')[0] === 'mpr3'\n        ) {\n          setTimeout(() => {\n            ToolBarService.recordInteraction({\n              groupId: 'ctToolGroup',\n              itemId: 'Crosshairs',\n              interactionType: 'tool',\n              commands: [\n                {\n                  commandName: 'setToolActive',\n                  commandOptions: {\n                    toolName: 'Crosshairs',\n                  },\n                  context: 'CORNERSTONE',\n                },\n              ],\n            });\n          }, 50);\n          const rapidIconState = {\n            crosshairEnabled:true,\n            activeTool:activeIcon.CROSSHAIR\n          }\n          stateSyncService.store({rapidIconState});\n        } else {\n          ToolBarService.recordInteraction({\n            groupId: 'ctDisplaySet',\n            itemId: 'StackScroll',\n            interactionType: 'tool',\n            commands: [\n              {\n                commandName: 'setToolActive',\n                commandOptions: {\n                  toolName: 'StackScroll',\n                },\n                context: 'CORNERSTONE',\n              },\n            ],\n          });\n          const rapidIconState = {\n            crosshairEnabled:false,\n            activateTool:activeIcon.STACK_SCROLL \n          }\n          stateSyncService.store({rapidIconState});\n        }\n\n        // We don't need to reset the active tool whenever a viewport is getting\n        // added to the toolGroup.\n        unsubscribe();\n      };\n\n      // Since we only have one viewport for the basic cs3d mode and it has\n      // only one hanging protocol, we can just use the first viewport\n      ({ unsubscribe } = ToolGroupService.subscribe(\n        ToolGroupService.EVENTS.VIEWPORT_ADDED,\n        activateTool\n      ));\n\n      ToolBarService.init(extensionManager);\n      // We hardcode the toolbar in IconMenu.tsx and do not rely on buttons from Toolbar Component\n      // ToolBarService.addButtons(getToolbarButtons({servicesManager}));\n      // ToolBarService.createButtonSection('primary', [\n      //   'WindowLevel',\n      //   'MoreTools'\n      // ]);\n    },\n    onModeExit: ({ servicesManager }) => {\n      const {\n        ToolGroupService,\n        SyncGroupService,\n        MeasurementService,\n        ToolBarService,\n        TouchService,\n        CacheAPIService,\n        OrientationService,\n      } = servicesManager.services;\n      ToolBarService.reset();\n      MeasurementService.clearMeasurements();\n      ToolGroupService.destroy();\n      SyncGroupService.destroy();\n      TouchService.destroy();\n      CacheAPIService.destory();\n      OrientationService.destroy();\n    },\n    validationTags: {\n      study: [],\n      series: [],\n    },\n    isValidMode: ({ modalities }) => {\n      const modalities_list = modalities.split('\\\\');\n\n      // Slide Microscopy modality not supported by basic mode yet\n      return !modalities_list.includes('SM');\n    },\n    routes: [\n      {\n        path: 'anrRMA',\n        layoutTemplate: () => {\n          return {\n            id: rapidai.layout,\n            props: {\n              colorTheme: 'color-scheme-dark',\n              deviceType: 'MOBILE',\n              rapidMode: 'ANR',\n              viewports: [\n                {\n                  namespace: rapidai.viewport,\n                  displaySetsToDisplay: [ohif.sopClassHandler],\n                },\n                {\n                  namespace: dicomsr.viewport,\n                  displaySetsToDisplay: [dicomsr.sopClassHandler],\n                },\n                {\n                  namespace: dicomvideo.viewport,\n                  displaySetsToDisplay: [dicomvideo.sopClassHandler],\n                },\n                {\n                  namespace: dicompdf.viewport,\n                  displaySetsToDisplay: [dicompdf.sopClassHandler],\n                },\n              ],\n              viewerLayoutHeight: '100vh',\n              viewportGridProps: {\n                modeViewportPaneStyles: ({ numViewports }) => {\n                  return {\n                    ohifDisableBorder: true,\n                  };\n                },\n              },\n            },\n          };\n        },\n      },\n    ],\n    extensions: extensionDependencies,\n    hangingProtocol: window?.matchMedia(\"(orientation: portrait)\")?.matches ? '@ischemaview/dicom-rapidai-extension.hangingProtocolModule.mpr3-vertical' : '@ischemaview/dicom-rapidai-extension.hangingProtocolModule.mpr3-horizontal',\n    // Order is important in sop class handlers when two handlers both use\n    // the same sop class under different situations.  In that case, the more\n    // general handler needs to come last.  For this case, the dicomvideo must\n    // come first to remove video transfer syntax before ohif uses images\n    sopClassHandlers: [\n      dicomvideo.sopClassHandler,\n      ohif.sopClassHandler,\n      dicompdf.sopClassHandler,\n      dicomsr.sopClassHandler,\n    ],\n    hotkeys: [...hotkeys],\n  };\n}\n\nconst mode = {\n  id,\n  modeFactory,\n  extensionDependencies,\n};\n\nexport default mode;\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","description","window","level","commandName","commandOptions","toolName","label","keys","isEditable","windowLevelPresets","id","packageJson","crosshairsReferenceLineColor","axial","sagittal","coronal","extensionManager","servicesManager","commandsManager","appConfig","utilityModule","getModuleEntry","_servicesManager$serv","services","ToolGroupService","CornerstoneViewportService","ViewportGridService","TrackingEventService","_utilityModule$export","toolbarService","toolNames","Enums","tools","active","Zoom","bindings","numTouchPoints","WindowLevel","StackScroll","mouseButton","MouseBindings","Primary","StackScrollMouseWheel","passive","Pan","disabled","Crosshairs","toolsConfig","viewportIndicators","autoPan","enabled","panSize","getReferenceLineColor","viewportId","_viewport$options","viewport","getCornerstoneViewport","options","orientation","onDragHook","annotations","map","annotation","_viewport$options2","data","element","style","border","concat","onEndHook","trackCrosshairChange","console","log","getState","viewports","vp","_viewport$options3","mobile","opacity","handleRadius","jumpThreshold","createToolGroupAndAddTools","initDefaultToolGroup","activeIcon","ohif","dicomsr","dicomvideo","dicompdf","extensionDependencies","modeFactory","_ref","_window","_window$matchMedia","modeConfiguration","routeName","displayName","onModeEnter","_ref2","unsubscribe","ToolBarService","TouchService","CacheAPIService","MouseEventService","HangingProtocolService","OrientationService","stateSyncService","init","initToolGroups","recordInteraction","groupId","itemId","interactionType","commands","context","_ToolGroupService$sub","subscribe","EVENTS","VIEWPORT_ADDED","protocol","split","slice","setTimeout","rapidIconState","crosshairEnabled","activeTool","CROSSHAIR","store","activateTool","STACK_SCROLL","onModeExit","_ref3","_servicesManager$serv2","SyncGroupService","MeasurementService","reset","clearMeasurements","destroy","destory","validationTags","study","series","isValidMode","_ref4","modalities","includes","routes","path","layoutTemplate","props","colorTheme","deviceType","rapidMode","namespace","displaySetsToDisplay","viewerLayoutHeight","viewportGridProps","modeViewportPaneStyles","_ref5","numViewports","ohifDisableBorder","extensions","hangingProtocol","matchMedia","matches","sopClassHandlers","hotkeys"],"sourceRoot":""}